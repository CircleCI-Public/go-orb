version: 2.1
orbs:
  go: {}
  orb-tools: circleci/orb-tools@12.0

filters: &filters
  tags:
    only: /.*/

release-filters: &release-filters
  branches:
    ignore: /.*/
  tags:
    only: /^v[0-9]+\.[0-9]+\.[0-9]+$/

jobs:
  int-test-goreleaser-install:
    executor:
      name: go/default
      tag: "1.20.8"
    steps:
      - go/install-goreleaser
  int-test-goreleaser-release:
    executor:
      name: go/default
      tag: "1.20.8"
    steps:
      - go/install-goreleaser
      - go/goreleaser-release:
          github-token: TEST_GH_TOKEN
          validate-yaml: true
          publish-release: false
          project-path: ~/project/tests
  int-test-cimg-go:
    executor:
      name: go/default
      tag: "1.13"
    steps:
      - run:
          name: "Check out sample project."
          command: git clone https://github.com/CircleCI-Public/circleci-demo-go.git ~/project
      - go/load-cache:
          key: "integration"
      - go/mod-download
      - run: go version && go build ./...
      - go/save-cache:
          key: "integration"
  int-test-cimg-base:
    docker:
      - image: cimg/base:stable
    steps:
      - run:
          name: "Check out sample project."
          command: git clone https://github.com/CircleCI-Public/circleci-demo-go.git ~/project
      - go/install
      - go/load-cache:
          key: "integration"
      - go/mod-download
      - run: go version && go build ./...
      - go/save-cache:
          key: "integration"
  int-test-cimg-python:
    docker:
      - image: cimg/python:3.11
    steps:
      - go/install:
          version: 1.17.2
      - run:
          name: "Check if the correct python version is accessible & installed"
          command: python --version | grep -q "^Python 3.11"
  int-test-macos-executor:
    macos:
      xcode: "14.1.0"
    steps:
      - run:
          name: "Check out sample project."
          command: git clone https://github.com/CircleCI-Public/circleci-demo-go.git ~/project
      - go/install
      - go/load-cache:
          key: "integration"
      - go/mod-download
      - run: go version && go build ./...
      - go/save-cache:
          key: "integration"
  int-test-vm-linux:
    machine:
      image: ubuntu-2004:202104-01
    steps:
      - run:
          name: "Check out sample project."
          command: git clone https://github.com/CircleCI-Public/circleci-demo-go.git ~/project
      - go/install:
          version: 1.16.4
      - go/load-cache:
          key: "integration"
      - go/mod-download
      - run: go version && go build ./...
      - go/save-cache:
          key: "integration"
  int-test-vm-arm64:
    machine:
      image: ubuntu-2204:2023.07.1
    resource_class: arm.medium
    steps:
      - run:
          name: "Check out sample project."
          command: git clone https://github.com/CircleCI-Public/circleci-demo-go.git ~/project
      - go/install:
          version: 1.16.4
      - go/load-cache:
          key: "integration-arm"
      - go/mod-download
      - run: go version && go build ./...
      - go/save-cache:
          key: "integration-arm"
  # test to make sure the dirty cache issue doesn't crop back up
  int-test-dirty-cache:
    machine:
      image: ubuntu-2004:202104-01
    steps:
      - run:
          name: "Check out sample project."
          command: git clone https://github.com/CircleCI-Public/circleci-demo-go.git ~/project
      - go/install:
          version: 1.15.1
      - go/load-cache:
          key: "integration"
      - go/mod-download
      - run: go version && go build ./...
      - go/save-cache:
          key: "integration"
      - go/install:
          version: 1.16.4
      - run: go version && go build ./...
workflows:
  test-deploy:
    jobs:
      # Make sure to include "filters: *filters" in every test job you want to run as part of your deployment.
      - int-test-goreleaser-install:
          filters: *filters
      - int-test-goreleaser-release:
          pre-steps:
            - checkout
            - run:
                name: Change to test directory
                command: cd ~/project/tests
          filters: *filters
      - int-test-cimg-go:
          filters: *filters
      - int-test-cimg-base:
          filters: *filters
      - int-test-cimg-python:
          filters: *filters
      - int-test-macos-executor:
          filters: *filters
      - int-test-vm-linux:
          filters: *filters
      - int-test-dirty-cache:
          filters: *filters
      - int-test-vm-arm64:
          filters: *filters
      - orb-tools/pack:
          filters: *release-filters
      - orb-tools/publish:
          orb_name: circleci/go
          vcs_type: << pipeline.project.type >>
          pub_type: production
          github_token: GHI_TOKEN
          requires:
            - orb-tools/pack
            - int-test-cimg-go
            - int-test-cimg-base
            - int-test-cimg-python
            - int-test-macos-executor
            - int-test-vm-linux
            - int-test-dirty-cache
            - int-test-vm-arm64
            - int-test-goreleaser-install
            - int-test-goreleaser-release
          context: orb-publisher
          filters: *release-filters
